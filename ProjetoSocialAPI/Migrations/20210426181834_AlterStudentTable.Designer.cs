// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoSocialAPI.Models.Context;

namespace ProjetoSocialAPI.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20210426181834_AlterStudentTable")]
    partial class AlterStudentTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("ProjetoSocialAPI.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("city");

                    b.Property<string>("Complement")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("complement");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deleted");

                    b.Property<DateTime>("ModificatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Modificated_at");

                    b.Property<string>("ModificatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("modificated_by");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("address");
                });

            modelBuilder.Entity("ProjetoSocialAPI.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deleted");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("disabled");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("login");

                    b.Property<DateTime>("ModificatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Modificated_at");

                    b.Property<string>("ModificatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("modificated_by");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("password");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TokenId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TokenId");

                    b.ToTable("person");
                });

            modelBuilder.Entity("ProjetoSocialAPI.Models.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("Attendance")
                        .HasColumnType("int")
                        .HasColumnName("attendance");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasColumnName("avatarUrl");

                    b.Property<int>("Belt")
                        .HasColumnType("int")
                        .HasColumnName("belt");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birthdate");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("created_by");

                    b.Property<int>("Degree")
                        .HasColumnType("int")
                        .HasColumnName("degee");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deleted");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasColumnName("email");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<DateTime>("ModificatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Modificated_at");

                    b.Property<string>("ModificatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("modificated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("student");
                });

            modelBuilder.Entity("ProjetoSocialAPI.Models.Token", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deleted");

                    b.Property<DateTime>("ModificatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Modificated_at");

                    b.Property<string>("ModificatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("modificated_by");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasColumnName("token");

                    b.Property<DateTime>("TokenRefreshTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("token_refresh_time");

                    b.HasKey("Id");

                    b.ToTable("token");
                });

            modelBuilder.Entity("ProjetoSocialAPI.Models.Person", b =>
                {
                    b.HasOne("ProjetoSocialAPI.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("ProjetoSocialAPI.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.HasOne("ProjetoSocialAPI.Models.Token", "Token")
                        .WithMany()
                        .HasForeignKey("TokenId");

                    b.Navigation("Address");

                    b.Navigation("Student");

                    b.Navigation("Token");
                });
#pragma warning restore 612, 618
        }
    }
}
